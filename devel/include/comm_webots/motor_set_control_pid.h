// Generated by gencpp from file comm_webots/motor_set_control_pid.msg
// DO NOT EDIT!


#ifndef COMM_WEBOTS_MESSAGE_MOTOR_SET_CONTROL_PID_H
#define COMM_WEBOTS_MESSAGE_MOTOR_SET_CONTROL_PID_H

#include <ros/service_traits.h>


#include <comm_webots/motor_set_control_pidRequest.h>
#include <comm_webots/motor_set_control_pidResponse.h>


namespace comm_webots
{

struct motor_set_control_pid
{

typedef motor_set_control_pidRequest Request;
typedef motor_set_control_pidResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct motor_set_control_pid
} // namespace comm_webots


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::comm_webots::motor_set_control_pid > {
  static const char* value()
  {
    return "712b4e401e3c9cbb098cd0435a9a13d3";
  }

  static const char* value(const ::comm_webots::motor_set_control_pid&) { return value(); }
};

template<>
struct DataType< ::comm_webots::motor_set_control_pid > {
  static const char* value()
  {
    return "comm_webots/motor_set_control_pid";
  }

  static const char* value(const ::comm_webots::motor_set_control_pid&) { return value(); }
};


// service_traits::MD5Sum< ::comm_webots::motor_set_control_pidRequest> should match
// service_traits::MD5Sum< ::comm_webots::motor_set_control_pid >
template<>
struct MD5Sum< ::comm_webots::motor_set_control_pidRequest>
{
  static const char* value()
  {
    return MD5Sum< ::comm_webots::motor_set_control_pid >::value();
  }
  static const char* value(const ::comm_webots::motor_set_control_pidRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::comm_webots::motor_set_control_pidRequest> should match
// service_traits::DataType< ::comm_webots::motor_set_control_pid >
template<>
struct DataType< ::comm_webots::motor_set_control_pidRequest>
{
  static const char* value()
  {
    return DataType< ::comm_webots::motor_set_control_pid >::value();
  }
  static const char* value(const ::comm_webots::motor_set_control_pidRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::comm_webots::motor_set_control_pidResponse> should match
// service_traits::MD5Sum< ::comm_webots::motor_set_control_pid >
template<>
struct MD5Sum< ::comm_webots::motor_set_control_pidResponse>
{
  static const char* value()
  {
    return MD5Sum< ::comm_webots::motor_set_control_pid >::value();
  }
  static const char* value(const ::comm_webots::motor_set_control_pidResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::comm_webots::motor_set_control_pidResponse> should match
// service_traits::DataType< ::comm_webots::motor_set_control_pid >
template<>
struct DataType< ::comm_webots::motor_set_control_pidResponse>
{
  static const char* value()
  {
    return DataType< ::comm_webots::motor_set_control_pid >::value();
  }
  static const char* value(const ::comm_webots::motor_set_control_pidResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // COMM_WEBOTS_MESSAGE_MOTOR_SET_CONTROL_PID_H
