// Generated by gencpp from file movement/speaker_speak.msg
// DO NOT EDIT!


#ifndef MOVEMENT_MESSAGE_SPEAKER_SPEAK_H
#define MOVEMENT_MESSAGE_SPEAKER_SPEAK_H

#include <ros/service_traits.h>


#include <movement/speaker_speakRequest.h>
#include <movement/speaker_speakResponse.h>


namespace movement
{

struct speaker_speak
{

typedef speaker_speakRequest Request;
typedef speaker_speakResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct speaker_speak
} // namespace movement


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::movement::speaker_speak > {
  static const char* value()
  {
    return "bc987d1a1839d594218b7c1d6a77ba5e";
  }

  static const char* value(const ::movement::speaker_speak&) { return value(); }
};

template<>
struct DataType< ::movement::speaker_speak > {
  static const char* value()
  {
    return "movement/speaker_speak";
  }

  static const char* value(const ::movement::speaker_speak&) { return value(); }
};


// service_traits::MD5Sum< ::movement::speaker_speakRequest> should match
// service_traits::MD5Sum< ::movement::speaker_speak >
template<>
struct MD5Sum< ::movement::speaker_speakRequest>
{
  static const char* value()
  {
    return MD5Sum< ::movement::speaker_speak >::value();
  }
  static const char* value(const ::movement::speaker_speakRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::movement::speaker_speakRequest> should match
// service_traits::DataType< ::movement::speaker_speak >
template<>
struct DataType< ::movement::speaker_speakRequest>
{
  static const char* value()
  {
    return DataType< ::movement::speaker_speak >::value();
  }
  static const char* value(const ::movement::speaker_speakRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::movement::speaker_speakResponse> should match
// service_traits::MD5Sum< ::movement::speaker_speak >
template<>
struct MD5Sum< ::movement::speaker_speakResponse>
{
  static const char* value()
  {
    return MD5Sum< ::movement::speaker_speak >::value();
  }
  static const char* value(const ::movement::speaker_speakResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::movement::speaker_speakResponse> should match
// service_traits::DataType< ::movement::speaker_speak >
template<>
struct DataType< ::movement::speaker_speakResponse>
{
  static const char* value()
  {
    return DataType< ::movement::speaker_speak >::value();
  }
  static const char* value(const ::movement::speaker_speakResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MOVEMENT_MESSAGE_SPEAKER_SPEAK_H
